# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: kozo002/myope
        auth:
          username: kozo002
          password: $DOCKEHRUB_PASSWORD

        environment:
          DB_HOST: 127.0.0.1

      - image: circleci/mysql:5.7
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_DATABASE: donusagi_bot_test
          MYSQL_USER: root

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}


      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            bundle exec rake assets:precompile
            bundle exec rspec spec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml
            cd ./learning && cp config/config.yml.example config/config.yml && nosetests -s tests
            bundle exec rails r "Bot.create(is_demo: false).tap{ |bot| bot.create_learning_parameter(LeariningParameter.default_attributes) }"
            python -m bin.benchmark


      # collect reports
      - type: store_artifacts
        path: tmp/capybara/
        destination: capybara
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
