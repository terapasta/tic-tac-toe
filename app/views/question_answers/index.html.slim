- if params[:headless].present?
  - content_for :hide_global_header, true
  - content_for :hide_sidebar, true
  - content_for :additional_container_main_class, 'container-main--headless'

- sort = params.dig(:q, :s)
- pagination = capture do
  .pagination-container
    = paginate @question_answers
    p 全#{@question_answers.total_count}件 #{@question_answers.count}件を表示中

.page-header
  .page-header__title Q&A管理
  .page-header__controls
    = link_to '新規登録', new_bot_question_answer_path(@bot), class: 'btn btn-default', data: { event_name: 'Open new question answer', bot_id: @bot.id, bot_name: @bot.name }

.well.clearfix
  .pull-left
    = form_tag bot_question_answers_path(@bot), method: :get, class: 'form-inline', data: { event_name: 'Search question answer', bot_id: @bot.id, bot_name: @bot.name } do
      = collection_select :topic, :id, @topic_tags.all, :id, :name, { prompt: "トピックタグで絞込", selected: @search_result }, class: 'form-control'
      = text_field_tag :keyword, '', size: '30%', class: "search-question-answer form-control", placeholder: "検索ワードを入力してください", value: @keyword
      = space
      = submit_tag '検索', name: "search", class: "btn btn-default"
      - if params.dig(:topic, :id).present?
        = space
        = link_to '✕ トピックタグ検索を解除', bot_question_answers_path(@bot), class: 'btn btn-link'

  .pull-right
    .form-inline
      span 並べ替え：
      select.form-control data-role="url-switcher" data-event="Sort question answers" data-bot-id=@bot.id data-bot-name=@bot.name
        option value=sorting_url('created_at desc') selected=(sort.blank? || sort == "created_at desc")
          |作成日時の新しい順
        option value=sorting_url('created_at asc') selected=(sort == "created_at asc")
          |作成日時の古い順
        option value=sorting_url('updated_at desc') selected=(sort == "updated_at desc")
          |更新日時の新しい順
        option value=sorting_url('updated_at asc') selected=(sort == "updated_at asc")
          |更新日時の古い順

= pagination

- @question_answers.each do |question_answer|
  = render 'summary_card', question_answer: question_answer, bot: @bot

= pagination
