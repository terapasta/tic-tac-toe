- chat = guest_message.chat

.card.mb-4
  .row.mt-3
    - if guest_message.bot_messages.any?
      .col-6.offset-6
        = render 'messages/guest_balloon', message: guest_message

      - guest_message.bot_messages.each do |bot_message|
        .col-6 style="padding-bottom:20px; padding-left:65px"
          = render 'messages/bot_balloon', bot: @bot, message: bot_message, show_mark_button: true
        - if message_has_decision_branches?(bot_message)
          .col-10.offset-1
            = render 'messages/decision_branches', items: message_get_decision_branches_from(bot_message), title: '回答を選択してください'
        - if bot_message.similar_question_answers_log.present? && bot_message.is_show_similar_question_answers
          .col-10.offset-1
            = render 'messages/decision_branches', items: bot_message.similar_question_answers_log.map{ |it| Struct.new(:body).new(it['question']) }, title: 'こちらの質問ではないですか？'
    - else
      .col-6.offset-6.mb-3
        = render 'messages/guest_balloon', message: guest_message

  .px-3.pb-3.d-flex.justify-content-between.align-items-center
    div
      small 質問日時：#{l guest_message.created_at}
      = space 10
      - if chat.guest_user.present?
        span style="font-size:12px;"
          = material_icon 'person'
          = space
          code= chat.guest_user.name
          - if chat.guest_user.email.present?
            = space
            |/
            = space
            code= chat.guest_user.email
    div
      = link_to bot_thread_messages_path(bot, chat), class: 'btn btn-info btn-sm', data: { event: 'check all chat log' } do
        = material_icon 'forum', class: 'mi-xs'
        = space
        span チャット全体を見る
